name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Build and push the Docker image
      - name: Build Docker Image
        run: |
          docker build --pull -t mtwebworx/blink-server-container:${{ github.sha }} \
                        -t mtwebworx/blink-server-container:latest .

      - name: Push Docker Image
        run: |
          docker push mtwebworx/blink-server-container:${{ github.sha }}
          docker push mtwebworx/blink-server-container:latest

      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 400 key.pem

          # Test SSH connection
          ssh -v -o StrictHostKeyChecking=no -i key.pem -t ec2-user@${{ secrets.EC2_HOST }} "echo SSH Connected"

          # Run Docker commands
          ssh -o StrictHostKeyChecking=no -i key.pem -t ec2-user@${{ secrets.EC2_HOST }} "docker pull mtwebworx/blink-server-container:latest"
          ssh -o StrictHostKeyChecking=no -i key.pem -t ec2-user@${{ secrets.EC2_HOST }} "docker stop blink-server-container-container || true"
          ssh -o StrictHostKeyChecking=no -i key.pem -t ec2-user@${{ secrets.EC2_HOST }} "docker rm blink-server-container-container || true"
          ssh -o StrictHostKeyChecking=no -i key.pem -t ec2-user@${{ secrets.EC2_HOST }} "docker run -d -p 8080:8080 --restart unless-stopped --name blink-server-container-container mtwebworx/blink-server-container:latest"
